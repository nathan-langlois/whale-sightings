name: CI
on: push
jobs:
  pint:
    name: "run pint"
    runs-on: ubuntu-latest
    steps:
      - name: "checkout repository"
        uses: actions/checkout@v3
      - name: "setup PHP 8.2"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          tools: composer
          coverage: none
      - name: "get composer cache directory"
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: "cache dependencies"
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: "install dependencies"
        run: composer install --prefer-dist
      - name: "run pint"
        run: php ./vendor/bin/pint --test
  tests:
    name: "run tests"
    runs-on: ubuntu-latest
    steps:
      - name: "checkout repository"
        uses: actions/checkout@v3
      - name: "setup PHP 8.2"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          tools: composer
          coverage: none
      - name: "get composer cache directory"
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: "cache dependencies"
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: "install dependencies"
        run: composer install --prefer-dist
      - name: "copy .env.example to .env"
        run: cp .env.testing .env
      - name: "set the application key"
        run: php artisan key:generate
      - name: "clear caches"
        run: php artisan optimize:clear
      - name: "setup node v20.5.1"
        uses: actions/setup-node@v3
        with:
          node-version: 20.5.1
          cache: 'npm'
      - name: "install node dependencies"
        run: npm ci
      - name: "build assets"
        run: npm run build
      - name: "run tests"
        run: php ./vendor/bin/pest